"""Initial migration with all tables

Revision ID: 001
Revises: 
Create Date: 2024-01-01 00:00:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '001'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('channels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('channel_id', sa.BigInteger(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('channel_id')
    )
    op.create_index(op.f('ix_channels_is_active'), 'channels', ['is_active'], unique=False)
    op.create_index(op.f('ix_channels_username'), 'channels', ['username'], unique=False)
    
    op.create_table('members_daily',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('channel_id', sa.BigInteger(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('members_count', sa.Integer(), nullable=False),
    sa.Column('members_growth', sa.Integer(), nullable=True),
    sa.Column('collected_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['channel_id'], ['channels.channel_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('channel_id', 'date', name='_channel_date_members_uc')
    )
    op.create_index(op.f('ix_members_daily_channel_id'), 'members_daily', ['channel_id'], unique=False)
    op.create_index(op.f('ix_members_daily_date'), 'members_daily', ['date'], unique=False)
    
    op.create_table('quality_scores',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('channel_id', sa.BigInteger(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('quality_score', sa.Float(), nullable=False),
    sa.Column('engagement_rate', sa.Float(), nullable=True),
    sa.Column('activity_score', sa.Float(), nullable=True),
    sa.Column('growth_score', sa.Float(), nullable=True),
    sa.Column('collected_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['channel_id'], ['channels.channel_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('channel_id', 'date', name='_channel_date_quality_uc')
    )
    op.create_index(op.f('ix_quality_scores_channel_id'), 'quality_scores', ['channel_id'], unique=False)
    op.create_index(op.f('ix_quality_scores_date'), 'quality_scores', ['date'], unique=False)
    
    op.create_table('reports_queue',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('report_type', sa.String(length=50), nullable=False),
    sa.Column('channel_id', sa.BigInteger(), nullable=True),
    sa.Column('parameters', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('result_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['channel_id'], ['channels.channel_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reports_queue_status'), 'reports_queue', ['status'], unique=False)
    
    op.create_table('views_daily',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('channel_id', sa.BigInteger(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('avg_views', sa.Float(), nullable=False),
    sa.Column('total_views', sa.Integer(), nullable=True),
    sa.Column('posts_count', sa.Integer(), nullable=True),
    sa.Column('collected_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['channel_id'], ['channels.channel_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('channel_id', 'date', name='_channel_date_views_uc')
    )
    op.create_index(op.f('ix_views_daily_channel_id'), 'views_daily', ['channel_id'], unique=False)
    op.create_index(op.f('ix_views_daily_date'), 'views_daily', ['date'], unique=False)
    
    op.create_table('mentions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('channel_id', sa.BigInteger(), nullable=False),
    sa.Column('mentioned_channel_id', sa.BigInteger(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('mention_type', sa.String(length=50), nullable=True),
    sa.Column('context', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['channel_id'], ['channels.channel_id'], ),
    sa.ForeignKeyConstraint(['mentioned_channel_id'], ['channels.channel_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mentions_channel_id'), 'mentions', ['channel_id'], unique=False)
    op.create_index(op.f('ix_mentions_mentioned_channel_id'), 'mentions', ['mentioned_channel_id'], unique=False)
    
    op.create_table('posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('channel_id', sa.BigInteger(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('text', sa.Text(), nullable=True),
    sa.Column('views', sa.Integer(), nullable=True),
    sa.Column('forwards', sa.Integer(), nullable=True),
    sa.Column('reactions', sa.Integer(), nullable=True),
    sa.Column('posted_at', sa.DateTime(), nullable=True),
    sa.Column('collected_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['channel_id'], ['channels.channel_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('channel_id', 'post_id', name='_channel_post_uc')
    )
    op.create_index(op.f('ix_posts_channel_id'), 'posts', ['channel_id'], unique=False)
    op.create_index(op.f('ix_posts_posted_at'), 'posts', ['posted_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_posts_posted_at'), table_name='posts')
    op.drop_index(op.f('ix_posts_channel_id'), table_name='posts')
    op.drop_table('posts')
    op.drop_index(op.f('ix_mentions_mentioned_channel_id'), table_name='mentions')
    op.drop_index(op.f('ix_mentions_channel_id'), table_name='mentions')
    op.drop_table('mentions')
    op.drop_index(op.f('ix_views_daily_date'), table_name='views_daily')
    op.drop_index(op.f('ix_views_daily_channel_id'), table_name='views_daily')
    op.drop_table('views_daily')
    op.drop_index(op.f('ix_reports_queue_status'), table_name='reports_queue')
    op.drop_table('reports_queue')
    op.drop_index(op.f('ix_quality_scores_date'), table_name='quality_scores')
    op.drop_index(op.f('ix_quality_scores_channel_id'), table_name='quality_scores')
    op.drop_table('quality_scores')
    op.drop_index(op.f('ix_members_daily_date'), table_name='members_daily')
    op.drop_index(op.f('ix_members_daily_channel_id'), table_name='members_daily')
    op.drop_table('members_daily')
    op.drop_index(op.f('ix_channels_username'), table_name='channels')
    op.drop_index(op.f('ix_channels_is_active'), table_name='channels')
    op.drop_table('channels')
    # ### end Alembic commands ###
