import logging

from channel_analytics import ChannelAnalytics

logger = logging.getLogger(__name__)


class ChannelReportService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫—Ä–∞—Å–∏–≤—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ –∫–∞–Ω–∞–ª–æ–≤"""

    def __init__(self, analytics: ChannelAnalytics):
        self.analytics = analytics

    def format_number(self, num: int) -> str:
        """–ö—Ä–∞—Å–∏–≤–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–µ–ª"""
        if num >= 1_000_000:
            return f"{num/1_000_000:.1f}M"
        elif num >= 1_000:
            return f"{num/1_000:.1f}K"
        return str(num)

    def get_growth_emoji(self, percentage: float) -> str:
        """–≠–º–æ–¥–∑–∏ –¥–ª—è —Ä–æ—Å—Ç–∞"""
        if percentage > 10:
            return "üöÄ"
        elif percentage > 5:
            return "üìà"
        elif percentage > 0:
            return "‚¨ÜÔ∏è"
        elif percentage == 0:
            return "‚û°Ô∏è"
        else:
            return "üìâ"

    def get_engagement_emoji(self, percentage: float) -> str:
        """–≠–º–æ–¥–∑–∏ –¥–ª—è –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç–∏"""
        if percentage > 80:
            return "üî•"
        elif percentage > 60:
            return "‚ú®"
        elif percentage > 40:
            return "üì¢"
        elif percentage > 20:
            return "‚ö°"
        else:
            return "üí§"

    async def generate_channel_summary_report(self, channel_id: int) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–≤–æ–¥–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –∫–∞–Ω–∞–ª–∞"""
        try:
            summary = await self.analytics.get_channel_summary(channel_id)

            if not summary:
                return "‚ùå –ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö"

            # –ë–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            title = summary.get("title", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–∞–Ω–∞–ª")[:50]
            subscribers = self.format_number(summary.get("subscribers_count", 0))
            posts = summary.get("posts_count", 0)

            # –†–æ—Å—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
            summary.get("subscriber_growth", 0)
            growth_percent = summary.get("growth_percentage", 0)
            growth_emoji = self.get_growth_emoji(growth_percent)

            # –ü—Ä–æ—Å–º–æ—Ç—Ä—ã
            self.format_number(summary.get("total_views", 0))
            self.format_number(summary.get("story_views", 0))

            # –†–µ–∞–∫—Ü–∏–∏
            summary.get("reactions_count", 0)

            # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            notifications_percent = summary.get("notifications_enabled_percent", 0)
            self.get_engagement_emoji(notifications_percent)

            report = f"""üìä <b>–°–í–û–î–ù–´–ô –û–¢–ß–Å–¢ –ö–ê–ù–ê–õ–ê</b>

üìÅ <b>–ö–∞–Ω–∞–ª:</b> {title}
üë• <b>–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤:</b> {subscribers}

üìà <b>–û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:</b>
‚Ä¢ –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {posts}
‚Ä¢ –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {subscribers}
‚Ä¢ –°—Ä–µ–¥–Ω–µ–µ –≤ –¥–µ–Ω—å: {summary.get('total_views', 0) // 7:.0f} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤

{growth_emoji} <b>–ê–ö–¢–ò–í–ù–û–°–¢–¨:</b>
‚Ä¢ –°–∞–º—ã–π –∞–∫—Ç–∏–≤–Ω—ã–π: N/A
‚Ä¢ –í–æ–≤–ª–µ—á—ë–Ω–Ω–æ—Å—Ç—å: {notifications_percent:.1f}%

‚è∞ <b>–ü–ò–ö–û–í–´–ï –ß–ê–°–´:</b>
–î–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ

üìÖ <b>–°–ï–ì–û–î–ù–Ø:</b>
‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏–π: 0
‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: 0

üí° <b>–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:</b>
‚Ä¢ üî• –°—Ç–∏–º—É–ª–∏—Ä—É–π—Ç–µ –æ–±—Å—É–∂–¥–µ–Ω–∏—è - –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∏–∑–∫–∞—è
‚Ä¢ üë• –ù–∏–∑–∫–∞—è –≤–æ–≤–ª–µ—á—ë–Ω–Ω–æ—Å—Ç—å - –ø—Ä–∏–≤–ª–µ–∫–∞–π—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤

üìä <b>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ:</b>
‚Ä¢ /charts - –≥—Ä–∞—Ñ–∏–∫–∏
‚Ä¢ /export - —ç–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
‚Ä¢ /alerts - –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–ª–µ—Ä—Ç–æ–≤"""

            return report

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–≤–æ–¥–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞: {e}")
            return f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞: {e}"

    async def generate_growth_report(self, channel_id: int) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ —Ä–æ—Å—Ç–∞ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤"""
        try:
            summary = await self.analytics.get_channel_summary(channel_id)
            growth_data = await self.analytics.get_subscriber_growth_data(channel_id, 7)

            if not summary:
                return "‚ùå –ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"

            title = summary.get("title", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–∞–Ω–∞–ª")[:30]
            current_subs = summary.get("subscribers_count", 0)
            growth = summary.get("subscriber_growth", 0)
            growth_percent = summary.get("growth_percentage", 0)
            growth_emoji = self.get_growth_emoji(growth_percent)

            # –ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–∞
            if len(growth_data) >= 2:
                recent_trend = (
                    growth_data[-1]["subscribers_gained"]
                    - growth_data[-2]["subscribers_gained"]
                )
                trend_emoji = (
                    "üìà" if recent_trend > 0 else "üìâ" if recent_trend < 0 else "‚û°Ô∏è"
                )
            else:
                trend_emoji = "‚û°Ô∏è"

            report = f"""üìà <b>–†–û–°–¢ –ü–û–î–ü–ò–°–ß–ò–ö–û–í</b>

üìÅ <b>–ö–∞–Ω–∞–ª:</b> {title}

{growth_emoji} <b>–°–¢–ê–¢–ò–°–¢–ò–ö–ê –ó–ê 7 –î–ù–ï–ô:</b>
‚Ä¢ –¢–µ–∫—É—â–∏–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–∏: {self.format_number(current_subs)}
‚Ä¢ –ü—Ä–∏—Ä–æ—Å—Ç: {growth:+d} ({growth_percent:+.2f}%)
‚Ä¢ –°—Ä–µ–¥–Ω–µ–µ –≤ –¥–µ–Ω—å: {growth/7:.1f}

{trend_emoji} <b>–¢–†–ï–ù–î:</b>
‚Ä¢ –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {"–†–æ—Å—Ç" if growth > 0 else "–ü–∞–¥–µ–Ω–∏–µ" if growth < 0 else "–°—Ç–∞–±–∏–ª—å–Ω–æ"}
‚Ä¢ –°–∫–æ—Ä–æ—Å—Ç—å: {"–ë—ã—Å—Ç—Ä–∞—è" if abs(growth_percent) > 10 else "–£–º–µ—Ä–µ–Ω–Ω–∞—è" if abs(growth_percent) > 2 else "–ú–µ–¥–ª–µ–Ω–Ω–∞—è"}

üìä <b>–ü–û–°–õ–ï–î–ù–ò–ï –î–ù–ò:</b>"""

            # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –¥–Ω—è–º
            for day_data in growth_data[-5:]:  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –¥–Ω–µ–π
                date = day_data["date"].strftime("%d.%m")
                gained = day_data["subscribers_gained"]
                lost = day_data["subscribers_lost"]
                net = gained - lost
                emoji = "‚úÖ" if net > 0 else "‚ùå" if net < 0 else "‚ûñ"
                report += f"\n{emoji} {date}: {net:+d} ({gained} –Ω–æ–≤—ã—Ö, {lost} —É—à–ª–æ)"

            # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
            recommendations = await self.analytics.generate_recommendations(channel_id)
            report += "\n\nüí° <b>–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:</b>"
            for rec in recommendations[:3]:
                report += f"\n‚Ä¢ {rec}"

            report += "\n\nüìä –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /charts –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤ —Ä–æ—Å—Ç–∞"

            return report

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞ —Ä–æ—Å—Ç–∞: {e}")
            return f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞: {e}"

    async def generate_engagement_report(self, channel_id: int) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç–∏"""
        try:
            summary = await self.analytics.get_channel_summary(channel_id)
            hourly_data = await self.analytics.get_hourly_views_data(channel_id, 7)

            if not summary:
                return "‚ùå –ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"

            title = summary.get("title", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–∞–Ω–∞–ª")[:30]
            total_views = summary.get("total_views", 0)
            story_views = summary.get("story_views", 0)
            subscribers = summary.get("subscribers_count", 1)
            notifications_percent = summary.get("notifications_enabled_percent", 0)

            # –†–∞—Å—á–µ—Ç –æ—Ö–≤–∞—Ç–∞
            reach_percent = (total_views / subscribers * 100) if subscribers > 0 else 0
            reach_emoji = self.get_engagement_emoji(reach_percent)

            notifications_emoji = self.get_engagement_emoji(notifications_percent)

            report = f"""‚ö° <b>–í–û–í–õ–ï–ß–ï–ù–ù–û–°–¢–¨ –ê–£–î–ò–¢–û–†–ò–ò</b>

üìÅ <b>–ö–∞–Ω–∞–ª:</b> {title}

{reach_emoji} <b>–û–•–í–ê–¢ –ó–ê 7 –î–ù–ï–ô:</b>
‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä—ã –ø–æ—Å—Ç–æ–≤: {self.format_number(total_views)}
‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä—ã –∏—Å—Ç–æ—Ä–∏–π: {self.format_number(story_views)}
‚Ä¢ –û—Ö–≤–∞—Ç –∞—É–¥–∏—Ç–æ—Ä–∏–∏: {reach_percent:.1f}%
‚Ä¢ –†–µ–∞–∫—Ü–∏–∏ –Ω–∞ –ø–æ—Å—Ç—ã: {summary.get('reactions_count', 0)}

{notifications_emoji} <b>–£–í–ï–î–û–ú–õ–ï–ù–ò–Ø:</b>
‚Ä¢ –í–∫–ª—é—á–µ–Ω—ã: {notifications_percent:.1f}%
‚Ä¢ –í–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å: {"–í—ã—Å–æ–∫–∞—è" if notifications_percent > 60 else "–°—Ä–µ–¥–Ω—è—è" if notifications_percent > 30 else "–ù–∏–∑–∫–∞—è"}

‚è∞ <b>–ü–ò–ö–û–í–´–ï –ß–ê–°–´ –ê–ö–¢–ò–í–ù–û–°–¢–ò:</b>"""

            # –ù–∞—Ö–æ–¥–∏–º —Ç–æ–ø-3 —á–∞—Å–∞
            if hourly_data:
                sorted_hours = sorted(
                    hourly_data, key=lambda x: x["total_views"], reverse=True
                )
                for i, hour_data in enumerate(sorted_hours[:3], 1):
                    hour = hour_data["hour_of_day"]
                    views = hour_data["total_views"]
                    emoji = "ü•á" if i == 1 else "ü•à" if i == 2 else "ü•â"
                    report += f"\n{emoji} {hour:02d}:00 - {self.format_number(views)} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤"
            else:
                report += "\n–î–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ"

            # –ê–Ω–∞–ª–∏–∑ –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç–∏
            if reach_percent > 50:
                engagement_level = "üî• –û—Ç–ª–∏—á–Ω–∞—è"
            elif reach_percent > 30:
                engagement_level = "‚ú® –•–æ—Ä–æ—à–∞—è"
            elif reach_percent > 15:
                engagement_level = "üì¢ –°—Ä–µ–¥–Ω—è—è"
            else:
                engagement_level = "üí§ –ù–∏–∑–∫–∞—è"

            report += f"""

üìä <b>–ê–ù–ê–õ–ò–ó:</b>
‚Ä¢ –£—Ä–æ–≤–µ–Ω—å –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç–∏: {engagement_level}
‚Ä¢ –°—Ä–µ–¥–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã: {total_views // 7:.0f}/–¥–µ–Ω—å
‚Ä¢ –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Ä–µ–∞–∫—Ü–∏–π: {(summary.get('reactions_count', 0) / max(1, summary.get('posts_count', 1)) * 100):.1f}%"""

            # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
            recommendations = await self.analytics.generate_recommendations(channel_id)
            report += "\n\nüí° <b>–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:</b>"
            for rec in recommendations[:2]:
                report += f"\n‚Ä¢ {rec}"

            return report

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞ –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç–∏: {e}")
            return f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞: {e}"

    async def generate_traffic_report(self, channel_id: int) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ —Ç—Ä–∞—Ñ–∏–∫–∞"""
        try:
            summary = await self.analytics.get_channel_summary(channel_id)
            traffic_data = await self.analytics.get_traffic_sources_data(channel_id, 30)

            if not summary:
                return "‚ùå –ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"

            title = summary.get("title", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–∞–Ω–∞–ª")[:30]

            # –≠–º–æ–¥–∑–∏ –¥–ª—è –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
            source_emojis = {
                "url": "üîó",
                "search": "üîç",
                "groups": "üë•",
                "channels": "üì¢",
                "private_chats": "üí¨",
                "other": "üåê",
            }

            source_names = {
                "url": "URL —Å—Å—ã–ª–∫–∏",
                "search": "–ü–æ–∏—Å–∫",
                "groups": "–ì—Ä—É–ø–ø—ã",
                "channels": "–ö–∞–Ω–∞–ª—ã",
                "private_chats": "–õ–∏—á–Ω—ã–µ —á–∞—Ç—ã",
                "other": "–î—Ä—É–≥–æ–µ",
            }

            report = f"""üéØ <b>–ò–°–¢–û–ß–ù–ò–ö–ò –¢–†–ê–§–ò–ö–ê</b>

üìÅ <b>–ö–∞–Ω–∞–ª:</b> {title}
üìÖ <b>–ü–µ—Ä–∏–æ–¥:</b> –ü–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π

üìä <b>–ò–°–¢–û–ß–ù–ò–ö–ò –ü–û–î–ü–ò–°–ß–ò–ö–û–í:</b>"""

            if traffic_data:
                total_subs = sum(item["total_subscribers"] for item in traffic_data)

                for item in traffic_data:
                    source = item["source_type"]
                    subs = item["total_subscribers"]
                    views = item["total_views"]
                    percentage = (subs / total_subs * 100) if total_subs > 0 else 0

                    emoji = source_emojis.get(source, "üìä")
                    name = source_names.get(source, source.title())

                    report += f"\n{emoji} <b>{name}:</b> {subs} ({percentage:.1f}%)"
            else:
                report += "\n–î–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ"

            report += """

üìà <b>–ü–†–û–°–ú–û–¢–†–´ –ü–û –ò–°–¢–û–ß–ù–ò–ö–ê–ú:</b>"""

            if traffic_data:
                total_views = sum(item["total_views"] for item in traffic_data)

                for item in traffic_data:
                    source = item["source_type"]
                    views = item["total_views"]
                    percentage = (views / total_views * 100) if total_views > 0 else 0

                    emoji = source_emojis.get(source, "üìä")
                    name = source_names.get(source, source.title())

                    report += f"\n{emoji} {name}: {self.format_number(views)} ({percentage:.1f}%)"

            # –ê–Ω–∞–ª–∏–∑ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
            if traffic_data:
                top_source = max(traffic_data, key=lambda x: x["total_subscribers"])
                top_source_name = source_names.get(
                    top_source["source_type"], "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
                )

                report += f"""

üîç <b>–ê–ù–ê–õ–ò–ó:</b>
‚Ä¢ –û—Å–Ω–æ–≤–Ω–æ–π –∏—Å—Ç–æ—á–Ω–∏–∫: {top_source_name}
‚Ä¢ –í—Å–µ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤: {len(traffic_data)}
‚Ä¢ –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {"–í—ã—Å–æ–∫–∞—è" if len(traffic_data) > 3 else "–°—Ä–µ–¥–Ω—è—è" if len(traffic_data) > 1 else "–ù–∏–∑–∫–∞—è"}

üí° <b>–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:</b>"""

                if len(traffic_data) <= 2:
                    report += "\n‚Ä¢ üéØ –î–∏–≤–µ—Ä—Å–∏—Ñ–∏—Ü–∏—Ä—É–π—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ —Ç—Ä–∞—Ñ–∏–∫–∞"
                    report += "\n‚Ä¢ üì¢ –†–∞–∑–≤–∏–≤–∞–π—Ç–µ –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–∞ —Å –¥—Ä—É–≥–∏–º–∏ –∫–∞–Ω–∞–ª–∞–º–∏"
                else:
                    report += "\n‚Ä¢ ‚úÖ –•–æ—Ä–æ—à–µ–µ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤"
                    report += (
                        f"\n‚Ä¢ üöÄ –£—Å–∏–ª–∏–≤–∞–π—Ç–µ —Ä–∞–±–æ—Ç—É —Å —Ç–æ–ø-–∏—Å—Ç–æ—á–Ω–∏–∫–æ–º: {top_source_name}"
                    )

            return report

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞ —Ç—Ä–∞—Ñ–∏–∫–∞: {e}")
            return f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞: {e}"

    async def generate_recommendations_report(self, channel_id: int) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ —Å AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏"""
        try:
            summary = await self.analytics.get_channel_summary(channel_id)
            recommendations = await self.analytics.generate_recommendations(channel_id)

            if not summary:
                return "‚ùå –ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"

            title = summary.get("title", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–∞–Ω–∞–ª")[:30]

            # –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
            growth = summary.get("growth_percentage", 0)
            notifications = summary.get("notifications_enabled_percent", 0)
            subscribers = summary.get("subscribers_count", 0)

            # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è –∫–∞–Ω–∞–ª–∞
            if subscribers > 100000:
                level = "üèÜ –ö—Ä—É–ø–Ω—ã–π –∫–∞–Ω–∞–ª"
            elif subscribers > 10000:
                level = "‚≠ê –°—Ä–µ–¥–Ω–∏–π –∫–∞–Ω–∞–ª"
            elif subscribers > 1000:
                level = "üìà –†–∞—Å—Ç—É—â–∏–π –∫–∞–Ω–∞–ª"
            else:
                level = "üå± –ù–æ–≤—ã–π –∫–∞–Ω–∞–ª"

            report = f"""ü§ñ <b>AI-–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò</b>

üìÅ <b>–ö–∞–Ω–∞–ª:</b> {title}
üìä <b>–£—Ä–æ–≤–µ–Ω—å:</b> {level}

üéØ <b>–¢–ï–ö–£–©–ï–ï –°–û–°–¢–û–Ø–ù–ò–ï:</b>
‚Ä¢ –ü–æ–¥–ø–∏—Å—á–∏–∫–∏: {self.format_number(subscribers)}
‚Ä¢ –†–æ—Å—Ç –∑–∞ –Ω–µ–¥–µ–ª—é: {growth:+.1f}%
‚Ä¢ –í–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å: {notifications:.1f}%
‚Ä¢ –°—Ç–∞—Ç—É—Å: {"üî• –ê–∫—Ç–∏–≤–Ω–æ —Ä–∞—Å—Ç–µ—Ç" if growth > 5 else "üìà –°—Ç–∞–±–∏–ª—å–Ω—ã–π —Ä–æ—Å—Ç" if growth > 0 else "‚ö†Ô∏è –ù—É–∂–Ω–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è"}

üí° <b>–ü–ï–†–°–û–ù–ê–õ–¨–ù–´–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:</b>"""

            for i, rec in enumerate(recommendations, 1):
                report += f"\n{i}. {rec}"

            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –ø–æ —É—Ä–æ–≤–Ω—é –∫–∞–Ω–∞–ª–∞
            report += "\n\nüéì <b>–°–¢–†–ê–¢–ï–ì–ò–ß–ï–°–ö–ò–ï –°–û–í–ï–¢–´:</b>"

            if subscribers < 1000:
                report += "\n‚Ä¢ üéØ –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –Ω–∏—à—É –∏ —Ü–µ–ª–µ–≤—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é"
                report += "\n‚Ä¢ üìù –°–æ–∑–¥–∞–≤–∞–π—Ç–µ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç-–ø–ª–∞–Ω"
                report += "\n‚Ä¢ ü§ù –ò—â–∏—Ç–µ –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–∞ —Å –ø–æ—Ö–æ–∂–∏–º–∏ –∫–∞–Ω–∞–ª–∞–º–∏"
            elif subscribers < 10000:
                report += "\n‚Ä¢ üìä –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –ª—É—á—à–∏–µ –ø–æ—Å—Ç—ã –∏ –ø–æ–≤—Ç–æ—Ä—è–π—Ç–µ —É—Å–ø–µ—Ö"
                report += "\n‚Ä¢ üé¨ –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å —Ä–∞–∑–Ω—ã–º–∏ —Ñ–æ—Ä–º–∞—Ç–∞–º–∏"
                report += "\n‚Ä¢ üí¨ –ê–∫—Ç–∏–≤–Ω–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–π—Ç–µ —Å –∞—É–¥–∏—Ç–æ—Ä–∏–µ–π"
            else:
                report += "\n‚Ä¢ üöÄ –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–π—Ç–µ —É—Å–ø–µ—à–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏"
                report += "\n‚Ä¢ üìà –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ –º–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—é"
                report += "\n‚Ä¢ üåê –†–∞–∑–≤–∏–≤–∞–π—Ç–µ —ç–∫–æ—Å–∏—Å—Ç–µ–º—É –≤–æ–∫—Ä—É–≥ –∫–∞–Ω–∞–ª–∞"

            # –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏
            report += f"""

üìã <b>–ü–õ–ê–ù –î–ï–ô–°–¢–í–ò–ô –ù–ê –ù–ï–î–ï–õ–Æ:</b>
1. üìä –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —á–µ—Ä–µ–∑ /charts
2. üéØ –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ –≤—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ—Å—Ç–æ–≤
3. üí¨ –£–≤–µ–ª–∏—á—å—Ç–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç–∞
4. üì¢ –ü—Ä–æ–≤–µ–¥–∏—Ç–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–ª—è –≤–æ–≤–ª–µ—á–µ–Ω–∏—è –∞—É–¥–∏—Ç–æ—Ä–∏–∏

‚è∞ <b>–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è —á–∞—Å—Ç–æ—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞:</b> {"–ï–∂–µ–¥–Ω–µ–≤–Ω–æ" if subscribers > 50000 else "2-3 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é" if subscribers > 5000 else "–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ"}"""

            return report

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: {e}")
            return f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞: {e}"
