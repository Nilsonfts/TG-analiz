#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π Telegram –±–æ—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è - –±–µ–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""
import os
import asyncio
import logging
from datetime import datetime
from dotenv import load_dotenv
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, ContextTypes, CallbackQueryHandler

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
BOT_TOKEN = os.getenv('BOT_TOKEN')

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /start"""
    await update.message.reply_text(
        "üöÄ <b>Telegram Channel Analytics Bot</b>\n\n"
        "‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!\n"
        "üí° –í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–æ–∫–µ–Ω –≤ .env —Ñ–∞–π–ª\n\n"
        "üìä –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "‚Ä¢ /summary - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–∞–Ω–∞–ª–∞\n"
        "‚Ä¢ /growth - –†–æ—Å—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤\n"
        "‚Ä¢ /charts - –ì—Ä–∞—Ñ–∏–∫–∏\n"
        "‚Ä¢ /help - –ü–æ–º–æ—â—å",
        parse_mode='HTML'
    )

async def summary_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /summary"""
    await update.message.reply_text(
        "üìä <b>–°–≤–æ–¥–∫–∞ –ø–æ –∫–∞–Ω–∞–ª—É</b>\n\n"
        "üë• –ü–æ–¥–ø–∏—Å—á–∏–∫–∏: 15,247 (+127 –∑–∞ –¥–µ–Ω—å)\n"
        "üìà –†–æ—Å—Ç: +0.8% –∑–∞ –Ω–µ–¥–µ–ª—é\n"
        "‚ö° –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: 45,230 (—Å—Ä–µ–¥–Ω–∏–µ)\n"
        "üéØ –û—Ö–≤–∞—Ç: 78.5% –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤\n\n"
        "ü§ñ <i>–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª –≤ –∫–æ–¥–µ.</i>",
        parse_mode='HTML'
    )

async def growth_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /growth"""
    await update.message.reply_text(
        "üìà <b>–†–æ—Å—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤</b>\n\n"
        "üìÖ <b>–ó–∞ 7 –¥–Ω–µ–π:</b>\n"
        "‚Ä¢ –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫: +45\n"
        "‚Ä¢ –í—Ç–æ—Ä–Ω–∏–∫: +38\n"
        "‚Ä¢ –°—Ä–µ–¥–∞: +52\n"
        "‚Ä¢ –ß–µ—Ç–≤–µ—Ä–≥: +41\n"
        "‚Ä¢ –ü—è—Ç–Ω–∏—Ü–∞: +67\n"
        "‚Ä¢ –°—É–±–±–æ—Ç–∞: +34\n"
        "‚Ä¢ –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ: +28\n\n"
        "üìä –ò—Ç–æ–≥–æ: +305 –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤\n"
        "üí° –õ—É—á—à–∏–π –¥–µ–Ω—å: –ü—è—Ç–Ω–∏—Ü–∞ (+67)",
        parse_mode='HTML'
    )

async def charts_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /charts"""
    keyboard = [
        [InlineKeyboardButton("üìà –†–æ—Å—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤", callback_data="chart_growth")],
        [InlineKeyboardButton("‚è∞ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ —á–∞—Å–∞–º", callback_data="chart_activity")],
        [InlineKeyboardButton("üéØ –ò—Å—Ç–æ—á–Ω–∏–∫–∏ —Ç—Ä–∞—Ñ–∏–∫–∞", callback_data="chart_traffic")],
        [InlineKeyboardButton("üìä –î–∞—à–±–æ—Ä–¥", callback_data="chart_dashboard")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        "üìä <b>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –≥—Ä–∞—Ñ–∏–∫–∞:</b>",
        reply_markup=reply_markup,
        parse_mode='HTML'
    )

async def handle_chart_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –∫–Ω–æ–ø–æ–∫ –≥—Ä–∞—Ñ–∏–∫–æ–≤"""
    query = update.callback_query
    await query.answer()
    
    chart_type = query.data.replace("chart_", "")
    
    messages = {
        "growth": "üìà –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≥—Ä–∞—Ñ–∏–∫ —Ä–æ—Å—Ç–∞ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤...",
        "activity": "‚è∞ –°—Ç—Ä–æ–∏–º –≥—Ä–∞—Ñ–∏–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ —á–∞—Å–∞–º...",
        "traffic": "üéØ –°–æ–∑–¥–∞–µ–º –¥–∏–∞–≥—Ä–∞–º–º—ã –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ —Ç—Ä–∞—Ñ–∏–∫–∞...",
        "dashboard": "üéõ –°–æ–±–∏—Ä–∞–µ–º –ø–æ–ª–Ω—ã–π –¥–∞—à–±–æ—Ä–¥..."
    }
    
    await query.edit_message_text(
        f"{messages.get(chart_type, 'üìä –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≥—Ä–∞—Ñ–∏–∫...')}\n\n"
        "ü§ñ <i>–ì—Ä–∞—Ñ–∏–∫–∏ –±—É–¥—É—Ç –≥–æ—Ç–æ–≤—ã –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∞–Ω–∞–ª–∏—Ç–∏–∫–∏.</i>",
        parse_mode='HTML'
    )

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /help"""
    await update.message.reply_text(
        "‚ùì <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É</b>\n\n"
        "üìä <b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
        "‚Ä¢ /start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞\n"
        "‚Ä¢ /summary - –°–≤–æ–¥–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n"
        "‚Ä¢ /growth - –†–æ—Å—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤\n"
        "‚Ä¢ /charts - –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –≥—Ä–∞—Ñ–∏–∫–∏\n"
        "‚Ä¢ /help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n\n"
        "üîß <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞:</b>\n"
        "1. –î–æ–±–∞–≤—å—Ç–µ BOT_TOKEN –≤ .env —Ñ–∞–π–ª\n"
        "2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–∞–Ω–∞–ª—É\n"
        "3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö\n\n"
        "üí° <b>–ü–æ–ª–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:</b> SETUP.md",
        parse_mode='HTML'
    )

async def unknown_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥"""
    await update.message.reply_text(
        "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.\n\n"
        "–í–≤–µ–¥–∏—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥."
    )

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    if not BOT_TOKEN or BOT_TOKEN == 'your_bot_token_here':
        print("‚ùå –û—à–∏–±–∫–∞: BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        print("üí° –î–æ–±–∞–≤—å—Ç–µ –≤–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –≤ —Ñ–∞–π–ª .env")
        print("   BOT_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω_–æ—Ç_BotFather")
        return
    
    print("üöÄ –ó–∞–ø—É—Å–∫ Telegram Channel Analytics Bot...")
    print(f"ü§ñ –¢–æ–∫–µ–Ω: {BOT_TOKEN[:10]}...")
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(BOT_TOKEN).build()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start_command))
    application.add_handler(CommandHandler("summary", summary_command))
    application.add_handler(CommandHandler("growth", growth_command))
    application.add_handler(CommandHandler("charts", charts_command))
    application.add_handler(CommandHandler("help", help_command))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –∫–Ω–æ–ø–æ–∫
    application.add_handler(CallbackQueryHandler(handle_chart_callback, pattern="^chart_"))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–º)
    from telegram.ext import MessageHandler, filters
    application.add_handler(MessageHandler(filters.COMMAND, unknown_command))
    
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    application.run_polling(allowed_updates=Update.ALL_TYPES)

if __name__ == "__main__":
    main()
